plugins {
    id 'java'
    id 'maven-publish'
}

group = 'com.TestArc'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.microsoft.playwright:playwright:1.50.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.0-M2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.0-M2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.0-M2'
    implementation 'org.yaml:snakeyaml:2.2'
    implementation 'io.qameta.allure:allure-testng:2.21.0'
    implementation 'io.qameta.allure:allure-junit5:2.21.0'
    implementation 'io.qameta.allure:allure-java-commons:2.21.0'
    implementation 'io.qameta.allure:allure-maven:2.8'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.4.2'
    implementation 'org.springframework.kafka:spring-kafka:3.3.2'
    implementation 'org.apache.kafka:kafka-clients:3.9.0'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.sonatype.plexus:plexus-sec-dispatcher:1.3'
    implementation 'org.json:json:20250107'
    implementation 'com.auth0:java-jwt:3.19.2'
}

tasks.withType(JavaCompile) {
    sourceCompatibility = '23'
    targetCompatibility = '23'
}


test
        {
            useJUnitPlatform()
            testLogging
                {
                     events "passed", "failed", "skipped"
                }
            maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
        }

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}